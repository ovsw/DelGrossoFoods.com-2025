---
description: how versioning is handled in this project and what should be done to create a new version
alwaysApply: false
---

## Monorepo Versioning Rules (Changesets)

### What “fixed group” means here

- All workspaces in the fixed group always share the same version number.
- You still select only the workspaces that actually changed when creating a changeset.
- CI will bump the version for the whole fixed group to the highest bump level across all changesets on `main`.
- CHANGELOG entries are generated only for the workspaces you selected in the changeset; others get the version bump but no notes.

Fixed group (exact package names):

- `web`
- `studio`
- `@workspace/ui`
- `@workspace/eslint-config`
- `@workspace/typescript-config`

Explicit selection rule to avoid confusion:

- When adding a changeset, select only the workspaces that actually changed; fixed groups still bump all workspaces to the same version (highest bump), but CHANGELOG entries are generated only for the selected ones.

### Quick recipes (copy/paste friendly)

1. Add a changeset with the work done in this conversation

```bash
pnpm changeset:add
# Select only changed workspaces (from the fixed group above)
# Choose bump: patch | minor | major (see guide below)
# Write a concise, user-facing summary (be imperative)
git add .changeset/*.md && git commit -m "chore(changeset): add changeset"
```

2. Add a changeset for this entire branch

```bash
pnpm changeset:add
# Select all workspaces that changed anywhere on this branch
# (Do not select all by default—choose only the ones that actually changed)
# Choose the appropriate bump; prefer patch unless API/UX changes warrant minor/major
git add .changeset/*.md && git commit -m "chore(changeset): add branch changeset"
```

3. Preview pending releases and versions

```bash
pnpm changeset:status
```

4. CI Release PR (automatic on main)

- After merging a changeset to `main`, CI opens a Release PR that bumps versions for the fixed group and writes CHANGELOGs for selected workspaces. Merge that PR to land the versions.

### Bump decision (fast guide)

- **patch**: bug fixes, performance tweaks, internal refactors, typings/tooling, docs-only
- **minor**: backwards-compatible features or notable UX improvements (no breaking changes)
- **major**: breaking API changes or framework upgrades requiring consumer changes

Because versions are fixed, the final version is the highest bump among changesets on `main`.

### Writing a good summary (examples)

- “Improve header navigation accessibility and hover/active UX”
- “Add ButtonGroup component and refactor CTA Button variants”

Bullets (optional, keep short):

```md
- Introduce NavLink with aria-current and focus-visible styles
- Use semantic ul/li markup in DesktopNav
- Add active state handling in MobileNavPanel
```

### Validation checklist (before merging Release PR)

- `pnpm changeset:status` shows expected workspaces and bump levels
- CHANGELOG entries are clear and scoped to selected workspaces
- All fixed workspaces share the same new version
- Internal dependency ranges are aligned

### Reference

- Config: `.changeset/config.json` (baseBranch: `main`, changelog: GitHub)
- Workspaces: `apps/*`, `packages/*` (pnpm)
- Pending changesets: `.changeset/*.md`
- CI workflow: `.github/workflows/release.yml`
